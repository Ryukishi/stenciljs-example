/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface MyComponent {
        /**
          * The first name
         */
        "first": string;
        /**
          * The last name
         */
        "last": string;
        /**
          * The middle name
         */
        "middle": string;
    }
    interface PocButton {
        /**
          * small | medium | large
          * @returns the button size
         */
        "size": 'small' | 'medium' | 'large';
        /**
          * button | submit
          * @returns the button type
         */
        "type": 'button' | 'submit';
        /**
          * primary | secondary
          * @returns the button variant
         */
        "variant": 'primary' | 'secondary' | 'outlined' | 'text';
    }
    interface PocInputfield {
        /**
          * example text for user input
          * @returns the example text
         */
        "placeholder": string;
    }
    interface PocTable {
        /**
          * data to be displayed in the table
          * @returns data in json format
         */
        "data": any[];
        /**
          * headers to be displayed in the first column
          * @returns first column headers
         */
        "horizontalheaders": any;
        /**
          * headers to be displayed in the first row
          * @returns first row headers
         */
        "verticalheaders": any;
    }
}
declare global {
    interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {
    }
    var HTMLMyComponentElement: {
        prototype: HTMLMyComponentElement;
        new (): HTMLMyComponentElement;
    };
    interface HTMLPocButtonElement extends Components.PocButton, HTMLStencilElement {
    }
    var HTMLPocButtonElement: {
        prototype: HTMLPocButtonElement;
        new (): HTMLPocButtonElement;
    };
    interface HTMLPocInputfieldElement extends Components.PocInputfield, HTMLStencilElement {
    }
    var HTMLPocInputfieldElement: {
        prototype: HTMLPocInputfieldElement;
        new (): HTMLPocInputfieldElement;
    };
    interface HTMLPocTableElement extends Components.PocTable, HTMLStencilElement {
    }
    var HTMLPocTableElement: {
        prototype: HTMLPocTableElement;
        new (): HTMLPocTableElement;
    };
    interface HTMLElementTagNameMap {
        "my-component": HTMLMyComponentElement;
        "poc-button": HTMLPocButtonElement;
        "poc-inputfield": HTMLPocInputfieldElement;
        "poc-table": HTMLPocTableElement;
    }
}
declare namespace LocalJSX {
    interface MyComponent {
        /**
          * The first name
         */
        "first"?: string;
        /**
          * The last name
         */
        "last"?: string;
        /**
          * The middle name
         */
        "middle"?: string;
    }
    interface PocButton {
        /**
          * small | medium | large
          * @returns the button size
         */
        "size"?: 'small' | 'medium' | 'large';
        /**
          * button | submit
          * @returns the button type
         */
        "type"?: 'button' | 'submit';
        /**
          * primary | secondary
          * @returns the button variant
         */
        "variant"?: 'primary' | 'secondary' | 'outlined' | 'text';
    }
    interface PocInputfield {
        /**
          * example text for user input
          * @returns the example text
         */
        "placeholder"?: string;
    }
    interface PocTable {
        /**
          * data to be displayed in the table
          * @returns data in json format
         */
        "data"?: any[];
        /**
          * headers to be displayed in the first column
          * @returns first column headers
         */
        "horizontalheaders"?: any;
        /**
          * headers to be displayed in the first row
          * @returns first row headers
         */
        "verticalheaders"?: any;
    }
    interface IntrinsicElements {
        "my-component": MyComponent;
        "poc-button": PocButton;
        "poc-inputfield": PocInputfield;
        "poc-table": PocTable;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "my-component": LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
            "poc-button": LocalJSX.PocButton & JSXBase.HTMLAttributes<HTMLPocButtonElement>;
            "poc-inputfield": LocalJSX.PocInputfield & JSXBase.HTMLAttributes<HTMLPocInputfieldElement>;
            "poc-table": LocalJSX.PocTable & JSXBase.HTMLAttributes<HTMLPocTableElement>;
        }
    }
}
